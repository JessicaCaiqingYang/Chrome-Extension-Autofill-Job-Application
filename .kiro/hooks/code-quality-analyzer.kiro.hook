{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes modified code for potential improvements including code smells, design patterns, and best practices. Generates suggestions for improving code quality while maintaining existing functionality.",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "*.ts",
      "*.tsx",
      "*.js",
      "*.jsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long methods, large classes, duplicate code, or complex conditionals\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to TypeScript/React best practices, proper error handling, and clean code principles\n4. **Performance**: Look for potential performance optimizations without changing functionality\n5. **Readability**: Suggest improvements for code clarity, naming conventions, and documentation\n6. **Maintainability**: Identify areas that could be refactored for better maintainability\n\nFor each suggestion, provide:\n- Clear explanation of the issue or improvement opportunity\n- Specific code examples showing the current approach and suggested improvement\n- Reasoning for why the change would be beneficial\n- Priority level (High/Medium/Low) based on impact\n\nFocus on actionable suggestions that maintain existing functionality while improving code quality."
  }
}